class Chip8:
    """
    This class should handle everything related to the CPU and memory and stuff.
    Main will actually call this class, and handle key inputs and graphics/sound display.


    main memory (array)
    function (constructor) to init initial memory stuff (font data)

    current opcode
    array of registers
    index register I - e.g. a pointer to a particular memory address that instructions can manipulate
    pc
    2d array that represents the screen
    stack pointer
    """

    def __init__(self,rom_name):
        self.memory = [0] * 0x1000
        self.pc = 0x200
        self.opcode = 0
        self.I = 0
        self.sp = 0
        # registers
        # display
        with open(f"ROMS/{rom_name}", "r+") as rom:
            self.rom = rom.read()

        self.init_fontset()
        self.load_rom()

    # store the font data from 0 to F in memory 0x50 - 0x9f
    def init_fontset(self):
        self.memory[0x50:0x55] = [0xF0, 0x90, 0x90, 0x90, 0xF0]  # 0
        self.memory[0x55:0x5a] = [0x20, 0x60, 0x20, 0x20, 0x70]  # 1
        self.memory[0x5a:0x5f] = [0xF0, 0x10, 0xF0, 0x80, 0xF0]  # 2
        self.memory[0x5f:0x64] = [0xF0, 0x10, 0xF0, 0x10, 0xF0]  # 3
        self.memory[0x64:0x69] = [0x90, 0x90, 0xF0, 0x10, 0x10]  # 4
        self.memory[0x69:0x6e] = [0xF0, 0x80, 0xF0, 0x10, 0xF0]  # 5
        self.memory[0x6e:0x73] = [0xF0, 0x80, 0xF0, 0x90, 0xF0]  # 6
        self.memory[0x73:0x78] = [0xF0, 0x10, 0x20, 0x40, 0x40]  # 7
        self.memory[0x78:0x7d] = [0xF0, 0x90, 0xF0, 0x90, 0xF0]  # 8
        self.memory[0x7d:0x82] = [0xF0, 0x90, 0xF0, 0x10, 0xF0]  # 9
        self.memory[0x82:0x87] = [0xF0, 0x90, 0xF0, 0x90, 0x90]  # A
        self.memory[0x87:0x8c] = [0xE0, 0x90, 0xE0, 0x90, 0xE0]  # B
        self.memory[0x8c:0x91] = [0xF0, 0x80, 0x80, 0x80, 0xF0]  # C
        self.memory[0x91:0x96] = [0xE0, 0x90, 0x90, 0x90, 0xE0]  # D
        self.memory[0x96:0x9b] = [0xF0, 0x80, 0xF0, 0x80, 0xF0]  # E
        self.memory[0x9b:0xA0] = [0xF0, 0x80, 0xF0, 0x80, 0x80]  # F

    def load_rom(self):
        # !!!